/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package online.prostobank.clients.api.dto.avro.module_push;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class UserDto extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7699003026550713129L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserDto\",\"namespace\":\"online.prostobank.clients.api.dto.avro.module_push\",\"fields\":[{\"name\":\"clientAccountNumber\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"middleName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"partner\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timeZone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryFrom\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deliveryTo\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserDto> ENCODER =
          new BinaryMessageEncoder<UserDto>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserDto> DECODER =
          new BinaryMessageDecoder<UserDto>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserDto> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserDto> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserDto> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserDto>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserDto to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserDto from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserDto instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserDto fromByteBuffer(
          java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence clientAccountNumber;
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence middleName;
  @Deprecated public java.lang.CharSequence partner;
  @Deprecated public java.lang.CharSequence timeZone;
  @Deprecated public java.lang.CharSequence deliveryFrom;
  @Deprecated public java.lang.CharSequence deliveryTo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserDto() {}

  /**
   * All-args constructor.
   * @param clientAccountNumber The new value for clientAccountNumber
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param middleName The new value for middleName
   * @param partner The new value for partner
   * @param timeZone The new value for timeZone
   * @param deliveryFrom The new value for deliveryFrom
   * @param deliveryTo The new value for deliveryTo
   */
  public UserDto(java.lang.CharSequence clientAccountNumber, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence middleName, java.lang.CharSequence partner, java.lang.CharSequence timeZone, java.lang.CharSequence deliveryFrom, java.lang.CharSequence deliveryTo) {
    this.clientAccountNumber = clientAccountNumber;
    this.firstName = firstName;
    this.lastName = lastName;
    this.middleName = middleName;
    this.partner = partner;
    this.timeZone = timeZone;
    this.deliveryFrom = deliveryFrom;
    this.deliveryTo = deliveryTo;
  }
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0: return clientAccountNumber;
      case 1: return firstName;
      case 2: return lastName;
      case 3: return middleName;
      case 4: return partner;
      case 5: return timeZone;
      case 6: return deliveryFrom;
      case 7: return deliveryTo;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0: clientAccountNumber = (java.lang.CharSequence)value$; break;
      case 1: firstName = (java.lang.CharSequence)value$; break;
      case 2: lastName = (java.lang.CharSequence)value$; break;
      case 3: middleName = (java.lang.CharSequence)value$; break;
      case 4: partner = (java.lang.CharSequence)value$; break;
      case 5: timeZone = (java.lang.CharSequence)value$; break;
      case 6: deliveryFrom = (java.lang.CharSequence)value$; break;
      case 7: deliveryTo = (java.lang.CharSequence)value$; break;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'clientAccountNumber' field.
   * @return The value of the 'clientAccountNumber' field.
   */
  public java.lang.CharSequence getClientAccountNumber() {
    return clientAccountNumber;
  }


  /**
   * Sets the value of the 'clientAccountNumber' field.
   * @param value the value to set.
   */
  public void setClientAccountNumber(java.lang.CharSequence value) {
    this.clientAccountNumber = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'middleName' field.
   * @return The value of the 'middleName' field.
   */
  public java.lang.CharSequence getMiddleName() {
    return middleName;
  }


  /**
   * Sets the value of the 'middleName' field.
   * @param value the value to set.
   */
  public void setMiddleName(java.lang.CharSequence value) {
    this.middleName = value;
  }

  /**
   * Gets the value of the 'partner' field.
   * @return The value of the 'partner' field.
   */
  public java.lang.CharSequence getPartner() {
    return partner;
  }


  /**
   * Sets the value of the 'partner' field.
   * @param value the value to set.
   */
  public void setPartner(java.lang.CharSequence value) {
    this.partner = value;
  }

  /**
   * Gets the value of the 'timeZone' field.
   * @return The value of the 'timeZone' field.
   */
  public java.lang.CharSequence getTimeZone() {
    return timeZone;
  }


  /**
   * Sets the value of the 'timeZone' field.
   * @param value the value to set.
   */
  public void setTimeZone(java.lang.CharSequence value) {
    this.timeZone = value;
  }

  /**
   * Gets the value of the 'deliveryFrom' field.
   * @return The value of the 'deliveryFrom' field.
   */
  public java.lang.CharSequence getDeliveryFrom() {
    return deliveryFrom;
  }


  /**
   * Sets the value of the 'deliveryFrom' field.
   * @param value the value to set.
   */
  public void setDeliveryFrom(java.lang.CharSequence value) {
    this.deliveryFrom = value;
  }

  /**
   * Gets the value of the 'deliveryTo' field.
   * @return The value of the 'deliveryTo' field.
   */
  public java.lang.CharSequence getDeliveryTo() {
    return deliveryTo;
  }


  /**
   * Sets the value of the 'deliveryTo' field.
   * @param value the value to set.
   */
  public void setDeliveryTo(java.lang.CharSequence value) {
    this.deliveryTo = value;
  }

  /**
   * Creates a new UserDto RecordBuilder.
   * @return A new UserDto RecordBuilder
   */
  public static online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder newBuilder() {
    return new online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder();
  }

  /**
   * Creates a new UserDto RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserDto RecordBuilder
   */
  public static online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder newBuilder(online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder other) {
    if (other == null) {
      return new online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder();
    } else {
      return new online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder(other);
    }
  }

  /**
   * Creates a new UserDto RecordBuilder by copying an existing UserDto instance.
   * @param other The existing instance to copy.
   * @return A new UserDto RecordBuilder
   */
  public static online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder newBuilder(online.prostobank.clients.api.dto.avro.module_push.UserDto other) {
    if (other == null) {
      return new online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder();
    } else {
      return new online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserDto instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserDto>
          implements org.apache.avro.data.RecordBuilder<UserDto> {

    private java.lang.CharSequence clientAccountNumber;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence middleName;
    private java.lang.CharSequence partner;
    private java.lang.CharSequence timeZone;
    private java.lang.CharSequence deliveryFrom;
    private java.lang.CharSequence deliveryTo;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.clientAccountNumber)) {
        this.clientAccountNumber = data().deepCopy(fields()[0].schema(), other.clientAccountNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.middleName)) {
        this.middleName = data().deepCopy(fields()[3].schema(), other.middleName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.partner)) {
        this.partner = data().deepCopy(fields()[4].schema(), other.partner);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.timeZone)) {
        this.timeZone = data().deepCopy(fields()[5].schema(), other.timeZone);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.deliveryFrom)) {
        this.deliveryFrom = data().deepCopy(fields()[6].schema(), other.deliveryFrom);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.deliveryTo)) {
        this.deliveryTo = data().deepCopy(fields()[7].schema(), other.deliveryTo);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing UserDto instance
     * @param other The existing instance to copy.
     */
    private Builder(online.prostobank.clients.api.dto.avro.module_push.UserDto other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.clientAccountNumber)) {
        this.clientAccountNumber = data().deepCopy(fields()[0].schema(), other.clientAccountNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.middleName)) {
        this.middleName = data().deepCopy(fields()[3].schema(), other.middleName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.partner)) {
        this.partner = data().deepCopy(fields()[4].schema(), other.partner);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timeZone)) {
        this.timeZone = data().deepCopy(fields()[5].schema(), other.timeZone);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.deliveryFrom)) {
        this.deliveryFrom = data().deepCopy(fields()[6].schema(), other.deliveryFrom);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.deliveryTo)) {
        this.deliveryTo = data().deepCopy(fields()[7].schema(), other.deliveryTo);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Gets the value of the 'clientAccountNumber' field.
     * @return The value.
     */
    public java.lang.CharSequence getClientAccountNumber() {
      return clientAccountNumber;
    }


    /**
     * Sets the value of the 'clientAccountNumber' field.
     * @param value The value of 'clientAccountNumber'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setClientAccountNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.clientAccountNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'clientAccountNumber' field has been set.
     * @return True if the 'clientAccountNumber' field has been set, false otherwise.
     */
    public boolean hasClientAccountNumber() {
      return fieldSetFlags()[0];
    }


    /**
     * Clears the value of the 'clientAccountNumber' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearClientAccountNumber() {
      clientAccountNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'firstName' field.
     * @return The value.
     */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
     * Sets the value of the 'firstName' field.
     * @param value The value of 'firstName'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'firstName' field has been set.
     * @return True if the 'firstName' field has been set, false otherwise.
     */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }


    /**
     * Clears the value of the 'firstName' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'lastName' field.
     * @return The value.
     */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
     * Sets the value of the 'lastName' field.
     * @param value The value of 'lastName'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'lastName' field has been set.
     * @return True if the 'lastName' field has been set, false otherwise.
     */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }


    /**
     * Clears the value of the 'lastName' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'middleName' field.
     * @return The value.
     */
    public java.lang.CharSequence getMiddleName() {
      return middleName;
    }


    /**
     * Sets the value of the 'middleName' field.
     * @param value The value of 'middleName'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setMiddleName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.middleName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'middleName' field has been set.
     * @return True if the 'middleName' field has been set, false otherwise.
     */
    public boolean hasMiddleName() {
      return fieldSetFlags()[3];
    }


    /**
     * Clears the value of the 'middleName' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearMiddleName() {
      middleName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'partner' field.
     * @return The value.
     */
    public java.lang.CharSequence getPartner() {
      return partner;
    }


    /**
     * Sets the value of the 'partner' field.
     * @param value The value of 'partner'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setPartner(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.partner = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'partner' field has been set.
     * @return True if the 'partner' field has been set, false otherwise.
     */
    public boolean hasPartner() {
      return fieldSetFlags()[4];
    }


    /**
     * Clears the value of the 'partner' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearPartner() {
      partner = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'timeZone' field.
     * @return The value.
     */
    public java.lang.CharSequence getTimeZone() {
      return timeZone;
    }


    /**
     * Sets the value of the 'timeZone' field.
     * @param value The value of 'timeZone'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setTimeZone(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.timeZone = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'timeZone' field has been set.
     * @return True if the 'timeZone' field has been set, false otherwise.
     */
    public boolean hasTimeZone() {
      return fieldSetFlags()[5];
    }


    /**
     * Clears the value of the 'timeZone' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearTimeZone() {
      timeZone = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'deliveryFrom' field.
     * @return The value.
     */
    public java.lang.CharSequence getDeliveryFrom() {
      return deliveryFrom;
    }


    /**
     * Sets the value of the 'deliveryFrom' field.
     * @param value The value of 'deliveryFrom'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setDeliveryFrom(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.deliveryFrom = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'deliveryFrom' field has been set.
     * @return True if the 'deliveryFrom' field has been set, false otherwise.
     */
    public boolean hasDeliveryFrom() {
      return fieldSetFlags()[6];
    }


    /**
     * Clears the value of the 'deliveryFrom' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearDeliveryFrom() {
      deliveryFrom = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
     * Gets the value of the 'deliveryTo' field.
     * @return The value.
     */
    public java.lang.CharSequence getDeliveryTo() {
      return deliveryTo;
    }


    /**
     * Sets the value of the 'deliveryTo' field.
     * @param value The value of 'deliveryTo'.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder setDeliveryTo(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.deliveryTo = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
     * Checks whether the 'deliveryTo' field has been set.
     * @return True if the 'deliveryTo' field has been set, false otherwise.
     */
    public boolean hasDeliveryTo() {
      return fieldSetFlags()[7];
    }


    /**
     * Clears the value of the 'deliveryTo' field.
     * @return This builder.
     */
    public online.prostobank.clients.api.dto.avro.module_push.UserDto.Builder clearDeliveryTo() {
      deliveryTo = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserDto build() {
      try {
        UserDto record = new UserDto();
        record.clientAccountNumber = fieldSetFlags()[0] ? this.clientAccountNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.middleName = fieldSetFlags()[3] ? this.middleName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.partner = fieldSetFlags()[4] ? this.partner : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.timeZone = fieldSetFlags()[5] ? this.timeZone : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.deliveryFrom = fieldSetFlags()[6] ? this.deliveryFrom : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.deliveryTo = fieldSetFlags()[7] ? this.deliveryTo : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserDto>
          WRITER$ = (org.apache.avro.io.DatumWriter<UserDto>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
          throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserDto>
          READER$ = (org.apache.avro.io.DatumReader<UserDto>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
          throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
          throws java.io.IOException
  {
    out.writeString(this.clientAccountNumber);

    if (this.firstName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.firstName);
    }

    if (this.lastName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.lastName);
    }

    if (this.middleName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.middleName);
    }

    if (this.partner == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.partner);
    }

    if (this.timeZone == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.timeZone);
    }

    if (this.deliveryFrom == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryFrom);
    }

    if (this.deliveryTo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryTo);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
          throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.clientAccountNumber = in.readString(this.clientAccountNumber instanceof Utf8 ? (Utf8)this.clientAccountNumber : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.firstName = null;
      } else {
        this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastName = null;
      } else {
        this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.middleName = null;
      } else {
        this.middleName = in.readString(this.middleName instanceof Utf8 ? (Utf8)this.middleName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.partner = null;
      } else {
        this.partner = in.readString(this.partner instanceof Utf8 ? (Utf8)this.partner : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.timeZone = null;
      } else {
        this.timeZone = in.readString(this.timeZone instanceof Utf8 ? (Utf8)this.timeZone : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryFrom = null;
      } else {
        this.deliveryFrom = in.readString(this.deliveryFrom instanceof Utf8 ? (Utf8)this.deliveryFrom : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryTo = null;
      } else {
        this.deliveryTo = in.readString(this.deliveryTo instanceof Utf8 ? (Utf8)this.deliveryTo : null);
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
          case 0:
            this.clientAccountNumber = in.readString(this.clientAccountNumber instanceof Utf8 ? (Utf8)this.clientAccountNumber : null);
            break;

          case 1:
            if (in.readIndex() != 1) {
              in.readNull();
              this.firstName = null;
            } else {
              this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
            }
            break;

          case 2:
            if (in.readIndex() != 1) {
              in.readNull();
              this.lastName = null;
            } else {
              this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
            }
            break;

          case 3:
            if (in.readIndex() != 1) {
              in.readNull();
              this.middleName = null;
            } else {
              this.middleName = in.readString(this.middleName instanceof Utf8 ? (Utf8)this.middleName : null);
            }
            break;

          case 4:
            if (in.readIndex() != 1) {
              in.readNull();
              this.partner = null;
            } else {
              this.partner = in.readString(this.partner instanceof Utf8 ? (Utf8)this.partner : null);
            }
            break;

          case 5:
            if (in.readIndex() != 1) {
              in.readNull();
              this.timeZone = null;
            } else {
              this.timeZone = in.readString(this.timeZone instanceof Utf8 ? (Utf8)this.timeZone : null);
            }
            break;

          case 6:
            if (in.readIndex() != 1) {
              in.readNull();
              this.deliveryFrom = null;
            } else {
              this.deliveryFrom = in.readString(this.deliveryFrom instanceof Utf8 ? (Utf8)this.deliveryFrom : null);
            }
            break;

          case 7:
            if (in.readIndex() != 1) {
              in.readNull();
              this.deliveryTo = null;
            } else {
              this.deliveryTo = in.readString(this.deliveryTo instanceof Utf8 ? (Utf8)this.deliveryTo : null);
            }
            break;

          default:
            throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










