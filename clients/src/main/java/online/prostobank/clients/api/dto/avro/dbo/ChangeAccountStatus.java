/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package online.prostobank.clients.api.dto.avro.dbo;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ChangeAccountStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2395191208910953637L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChangeAccountStatus\",\"namespace\":\"online.prostobank.clients.api.dto.avro.dbo\",\"fields\":[{\"name\":\"userId\",\"type\":\"string\"},{\"name\":\"inn\",\"type\":\"string\"},{\"name\":\"timeEvent\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"accountNumber\",\"type\":\"string\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"AccountStatus\",\"symbols\":[\"reservation\",\"closure\",\"wait_for_docs\",\"open\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<ChangeAccountStatus> ENCODER =
      new BinaryMessageEncoder<ChangeAccountStatus>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ChangeAccountStatus> DECODER =
      new BinaryMessageDecoder<ChangeAccountStatus>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ChangeAccountStatus> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ChangeAccountStatus> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ChangeAccountStatus> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ChangeAccountStatus>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ChangeAccountStatus to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ChangeAccountStatus from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ChangeAccountStatus instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ChangeAccountStatus fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence userId;
  @Deprecated public java.lang.CharSequence inn;
  @Deprecated public java.time.LocalDate timeEvent;
  @Deprecated public java.lang.CharSequence accountNumber;
  @Deprecated public online.prostobank.clients.api.dto.avro.dbo.AccountStatus status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ChangeAccountStatus() {}

  /**
   * All-args constructor.
   * @param userId The new value for userId
   * @param inn The new value for inn
   * @param timeEvent The new value for timeEvent
   * @param accountNumber The new value for accountNumber
   * @param status The new value for status
   */
  public ChangeAccountStatus(java.lang.CharSequence userId, java.lang.CharSequence inn, java.time.LocalDate timeEvent, java.lang.CharSequence accountNumber, online.prostobank.clients.api.dto.avro.dbo.AccountStatus status) {
    this.userId = userId;
    this.inn = inn;
    this.timeEvent = timeEvent;
    this.accountNumber = accountNumber;
    this.status = status;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return inn;
    case 2: return timeEvent;
    case 3: return accountNumber;
    case 4: return status;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.CharSequence)value$; break;
    case 1: inn = (java.lang.CharSequence)value$; break;
    case 2: timeEvent = (java.time.LocalDate)value$; break;
    case 3: accountNumber = (java.lang.CharSequence)value$; break;
    case 4: status = (online.prostobank.clients.api.dto.avro.dbo.AccountStatus)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.CharSequence getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.CharSequence value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'inn' field.
   * @return The value of the 'inn' field.
   */
  public java.lang.CharSequence getInn() {
    return inn;
  }


  /**
   * Sets the value of the 'inn' field.
   * @param value the value to set.
   */
  public void setInn(java.lang.CharSequence value) {
    this.inn = value;
  }

  /**
   * Gets the value of the 'timeEvent' field.
   * @return The value of the 'timeEvent' field.
   */
  public java.time.LocalDate getTimeEvent() {
    return timeEvent;
  }


  /**
   * Sets the value of the 'timeEvent' field.
   * @param value the value to set.
   */
  public void setTimeEvent(java.time.LocalDate value) {
    this.timeEvent = value;
  }

  /**
   * Gets the value of the 'accountNumber' field.
   * @return The value of the 'accountNumber' field.
   */
  public java.lang.CharSequence getAccountNumber() {
    return accountNumber;
  }


  /**
   * Sets the value of the 'accountNumber' field.
   * @param value the value to set.
   */
  public void setAccountNumber(java.lang.CharSequence value) {
    this.accountNumber = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public online.prostobank.clients.api.dto.avro.dbo.AccountStatus getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(online.prostobank.clients.api.dto.avro.dbo.AccountStatus value) {
    this.status = value;
  }

  /**
   * Creates a new ChangeAccountStatus RecordBuilder.
   * @return A new ChangeAccountStatus RecordBuilder
   */
  public static online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder newBuilder() {
    return new online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder();
  }

  /**
   * Creates a new ChangeAccountStatus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ChangeAccountStatus RecordBuilder
   */
  public static online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder newBuilder(online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder other) {
    if (other == null) {
      return new online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder();
    } else {
      return new online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder(other);
    }
  }

  /**
   * Creates a new ChangeAccountStatus RecordBuilder by copying an existing ChangeAccountStatus instance.
   * @param other The existing instance to copy.
   * @return A new ChangeAccountStatus RecordBuilder
   */
  public static online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder newBuilder(online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus other) {
    if (other == null) {
      return new online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder();
    } else {
      return new online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder(other);
    }
  }

  /**
   * RecordBuilder for ChangeAccountStatus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChangeAccountStatus>
    implements org.apache.avro.data.RecordBuilder<ChangeAccountStatus> {

    private java.lang.CharSequence userId;
    private java.lang.CharSequence inn;
    private java.time.LocalDate timeEvent;
    private java.lang.CharSequence accountNumber;
    private online.prostobank.clients.api.dto.avro.dbo.AccountStatus status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.inn)) {
        this.inn = data().deepCopy(fields()[1].schema(), other.inn);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timeEvent)) {
        this.timeEvent = data().deepCopy(fields()[2].schema(), other.timeEvent);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.accountNumber)) {
        this.accountNumber = data().deepCopy(fields()[3].schema(), other.accountNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing ChangeAccountStatus instance
     * @param other The existing instance to copy.
     */
    private Builder(online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inn)) {
        this.inn = data().deepCopy(fields()[1].schema(), other.inn);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeEvent)) {
        this.timeEvent = data().deepCopy(fields()[2].schema(), other.timeEvent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.accountNumber)) {
        this.accountNumber = data().deepCopy(fields()[3].schema(), other.accountNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder setUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'inn' field.
      * @return The value.
      */
    public java.lang.CharSequence getInn() {
      return inn;
    }


    /**
      * Sets the value of the 'inn' field.
      * @param value The value of 'inn'.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder setInn(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.inn = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'inn' field has been set.
      * @return True if the 'inn' field has been set, false otherwise.
      */
    public boolean hasInn() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'inn' field.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder clearInn() {
      inn = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeEvent' field.
      * @return The value.
      */
    public java.time.LocalDate getTimeEvent() {
      return timeEvent;
    }


    /**
      * Sets the value of the 'timeEvent' field.
      * @param value The value of 'timeEvent'.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder setTimeEvent(java.time.LocalDate value) {
      validate(fields()[2], value);
      this.timeEvent = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timeEvent' field has been set.
      * @return True if the 'timeEvent' field has been set, false otherwise.
      */
    public boolean hasTimeEvent() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timeEvent' field.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder clearTimeEvent() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountNumber() {
      return accountNumber;
    }


    /**
      * Sets the value of the 'accountNumber' field.
      * @param value The value of 'accountNumber'.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder setAccountNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.accountNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'accountNumber' field has been set.
      * @return True if the 'accountNumber' field has been set, false otherwise.
      */
    public boolean hasAccountNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'accountNumber' field.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder clearAccountNumber() {
      accountNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public online.prostobank.clients.api.dto.avro.dbo.AccountStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder setStatus(online.prostobank.clients.api.dto.avro.dbo.AccountStatus value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public online.prostobank.clients.api.dto.avro.dbo.ChangeAccountStatus.Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ChangeAccountStatus build() {
      try {
        ChangeAccountStatus record = new ChangeAccountStatus();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.inn = fieldSetFlags()[1] ? this.inn : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.timeEvent = fieldSetFlags()[2] ? this.timeEvent : (java.time.LocalDate) defaultValue(fields()[2]);
        record.accountNumber = fieldSetFlags()[3] ? this.accountNumber : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (online.prostobank.clients.api.dto.avro.dbo.AccountStatus) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ChangeAccountStatus>
    WRITER$ = (org.apache.avro.io.DatumWriter<ChangeAccountStatus>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ChangeAccountStatus>
    READER$ = (org.apache.avro.io.DatumReader<ChangeAccountStatus>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










